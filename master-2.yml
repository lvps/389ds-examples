---
- hosts: mm2
  become: true

  vars:
    other_cert: "ca/ldap1_example_local_cert.pem"

  pre_tasks:
  - name: Set hosts file
    copy: src=hosts dest=/etc/hosts owner=root group=root

  roles:
    -
      role: 389ds-server
      dirsrv_suffix: "dc=example,dc=local"
      dirsrv_rootdn_password: secret2
      dirsrv_install_suggest: false
      dirsrv_tls_enabled: true
      # ./cert.sh ldap2.example.local
      dirsrv_tls_cert_file: "ca/ldap2_example_local_cert.pem"
      dirsrv_tls_key_file: "ca/ldap2_example_local.key"
      dirsrv_tls_files_remote: false
      dirsrv_tls_certificate_trusted: false
      dirsrv_tls_enforced: true
      dirsrv_password_storage_scheme: "PBKDF2_SHA256"
      dirsrv_plugins_enabled:
        MemberOf Plugin: true
        Distributed Numeric Assignment Plugin: false
    -
      role: 389ds-replication
      dirsrv_replica_role: 'both'
      dirsrv_suffix: "dc=example,dc=local"
      dirsrv_uri: "ldap://localhost"
      dirsrv_rootdn_password: secret2
      dirsrv_use_starttls: true
      dirsrv_tls_certificate_public_trusted: false
      dirsrv_replication_user_password: "icauvaelae3reixeiP9ahgh0ei"
      dirsrv_replication_user_password_remote: "Sahj0aedolo0aiNgusoo8onu0s" # On the other server
      dirsrv_consumer_uri: "ldap://ldap1.example.local:389/" # The other server
      dirsrv_begin_replication_immediately: false
      dirsrv_supplier_replica_id: 2

  tasks:
  - block:
    - name: Copy other cert
      copy:
        src: "{{ other_cert }}"
        dest: "/tmp/other-cert-ansible-managed.crt"
        mode: '400'
        setype: cert_t
      changed_when: false

    - name: Install other certificate into NSS db
      command: >
        certutil -A
        -d '/etc/dirsrv/slapd-default'
        -n '{{ other_cert | basename | replace('.', '_') }}-ansible-managed'
        -t 'PC,PC,PC'
        -i '/tmp/other-cert-ansible-managed.crt'
      changed_when: false

    - name: Restart 389DS
      service:
        name: "dirsrv@{{ dirsrv_serverid }}"
        state: restarted

    always:
    - name: Remove temporary files
      file:
        state: absent
        path: "/tmp/other-cert-ansible-managed.crt"
      changed_when: false
